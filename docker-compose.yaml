services:

  redis:
    container_name: ${REDIS_HOST}
    image: redis:latest
    command: --port ${REDIS_PORT}
    volumes:
      - ./app_data/redis:/data
    networks:
      - mycego_sites

  bot:
    container_name: ${BOT_NAME}
    build:
      dockerfile: ./Dockerfile
    image: mycego_bot
    restart: on-failure
    volumes:
      - ./app_data:/bot/app_data
      - ./logs/bot:/bot/logs
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
    networks:
      - mycego_sites

  celery:
    build:
      dockerfile: ./Dockerfile
    container_name: ${CELERY_CONTAINER}
    entrypoint: celery -A celery_main.bot_celery worker --autoscale=2,1 --loglevel=info
    env_file:
      - .env
    volumes:
      - ./logs/celery:/bot/logs
      - ./app_data:/bot/app_data
    depends_on:
      - redis
    networks:
      - mycego_sites

  celery-beat:
    build:
      dockerfile: ./Dockerfile
    container_name: ${CELERY_BEAT_CONTAINER}
    entrypoint: celery -A celery_main.bot_celery beat --loglevel=info
    env_file:
      - .env
    volumes:
      - ./logs/celery_beat:/bot/logs
      - ./app_data:/bot/app_data
    depends_on:
      - redis
    networks:
      - mycego_sites

networks:
  mycego_sites:
    name: mycego_sites