from datetime import timedelta, datetime

from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy import select
from sqlalchemy.exc import IntegrityError

from api_services import check_user_api
from db import Chat, User, async_session
from FSM import AuthState, AcquaintanceState
from helpers import aget_user_by_site_username, anotify_admins, sanitize_string
from keyboards import menu_keyboard
from messages import ACQUAINTANCE_FIRST_MESSAGE, ACQUAINTANCE_SECOND_MESSAGE, ACQUAINTANCE_ABOUT_US
from settings import ADMINS, logger

# –†–æ—É—Ç–µ—Ä –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞
acquaintance_router = Router()


@acquaintance_router.message(AcquaintanceState.waiting_for_date_of_birth, F.chat.type == "private")
async def process_date_of_birth(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        # –ø–∞—Ä—Å–∏–º –¥–∞—Ç—É
        try:
            dob = datetime.strptime(message.text, "%d.%m.%Y")
        except ValueError:
            await message.answer(
                "–î–∞—Ç–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.2001)"
            )
            return
        # –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
        await message.answer(ACQUAINTANCE_SECOND_MESSAGE)
        await state.set_state(AcquaintanceState.waiting_for_about_me)
    except Exception as e:
        # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        logger.exception(e)
        # –æ—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.clear()
        # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω—ã –≤ –∫—É—Ä—Å–µ.")
        # —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ–± –æ—à–∏–±–∫–µ
        await anotify_admins(
            message.bot,
            f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}, –æ—à–∏–±–∫–∞: {e}",
            admins_list=ADMINS,
        )


@acquaintance_router.message(AcquaintanceState.waiting_for_about_me, F.chat.type == "private")
async def process_date_of_birth(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–ª–æ–∫ '–æ —Å–µ–±–µ'
    """
    try:
        data = await state.get_data()
        about_me = data.get("about_me") or ""
        about_me += " " + message.text.strip()
        data["about_me"] = about_me
        await state.set_data(data)
        if len(about_me) == 0:
            await message.answer("–¢—Ä—é–∫ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ —É–¥–∏–≤–∏—Ç ‚ò∫Ô∏è\n\n")
        elif len(about_me) < 25:
            await message.answer(
                "–•–º, –Ω–µ –≥—É—Å—Ç–æ ü•≤\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å! "
                "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –ø–æ–±–æ–ª—å—à–µ! –Ø –∑–∞–ø–æ–º–Ω–∏–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                "–ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∫ –Ω–µ–º—É —Ç–æ, —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º."
            )
        elif len(about_me) < 50:
            await message.answer(
                "–•–æ—Ä–æ—à–æ! –ù–æ —è —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ —á—É—Ç–æ—á–∫—É –±–æ–ª—å—à–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!\n"
                "–ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —è –∑–∞–ø–æ–º–Ω–∏–ª."
            )
        else:
            logger.info(about_me)
            await message.answer(ACQUAINTANCE_ABOUT_US)
            await state.clear()

    except Exception as e:
        # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        logger.exception(e)
        # –æ—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.clear()
        # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω—ã –≤ –∫—É—Ä—Å–µ.")
        # —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ–± –æ—à–∏–±–∫–µ
        await anotify_admins(
            message.bot,
            f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}, –æ—à–∏–±–∫–∞: {e}",
            admins_list=ADMINS,
        )

