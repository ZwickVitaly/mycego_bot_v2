import json
from itertools import groupby

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from api_services import (  # get_data_delivery,
    get_appointments,
    get_pay_sheet,
    get_request,
    get_statistic,
    get_works_lists, get_user_delivery_works,
)
from api_services.mycego_site import get_deliveries_in_progress
from custom_filters import NotStatesGroupFilter
from db import Message, Works, async_session
from FSM import (  # WorkListDelivery
    AcquaintanceState,
    PaySheets,
    Requests,
    ViewWorkList,
    WorkGraf,
    WorkList,
    survey_states,
    WorkListDelivery, WorkDeliveryView,
)
from helpers import (
    aget_user_by_id,
    aget_users_count,
    anotify_admins,
    get_message_counts_by_group, make_delivery_view_message,
)
from keyboards import (
    create_works_list,
    generate_current_week_works_dates,
    generate_next_week_dates_keyboard,
    generate_pay_sheets,
    menu_keyboard,
    type_request,
    marketplaces_keyboard,
)
from settings import ADMINS, logger
from sqlalchemy import select

# –†–æ—É—Ç–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu_router = Router()


@main_menu_router.message(
    F.chat.type == "private",
    F.text,
    NotStatesGroupFilter(survey_states + [AcquaintanceState]),
)
async def main_menu_message_handler(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    try:
        # –æ—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.clear()
        # —Å–º–æ—Ç—Ä–∏–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        user = await aget_user_by_id(message.from_user.id)
        # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π
        text = message.text
        if user or True:
            # –Ω–∞—à–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–µ—Ä—ë–º –µ–≥–æ id —Å —Å–∞–π—Ç–∞
            user_id_site = user.site_user_id
            if text == "üóì–ó–∞—è–≤–∫–∞ –≤ –≥—Ä–∞—Ñ–∏–∫":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–∑–∞—è–≤–∫–∞ –≤ –≥—Ä–∞—Ñ–∏–∫', —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await state.set_state(WorkGraf.choice_date)
                # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É (inline)
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏:",
                    reply_markup=await generate_next_week_dates_keyboard(),
                )
            elif text == "üìï–ú–æ–∏ –∑–∞–ø–∏—Å–∏":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–º–æ–∏ –∑–∞–ø–∏—Å–∏', –ø–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ –≥—Ä–∞—Ñ–∏–∫—É —Å —Å–∞–π—Ç–∞
                ap_list = (await get_appointments(user_id_site)).get("message")
                # —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.answer("–ó–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –∏ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é:")
                if not ap_list:
                    # –∑–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await message.answer("–ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    return
                # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await state.set_state(WorkGraf.delete_row)
                # –≤—ã–¥–∞—ë–º –∑–∞–ø–∏—Å–∏
                for index, item in enumerate(ap_list, start=1):
                    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                    verified = "‚úÖ–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ" if item[3] else "‚õîÔ∏è–ù–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ"
                    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    message_text = (
                        f'{index}. {item[0]} —Å {item[1].replace(":00:00", ":00")} '
                        f'–ø–æ {item[2].replace(":00:00", ":00")} \n{verified}'
                    )
                    if item[3]:
                        # –µ—Å–ª–∏ —É–∂–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Ç
                        await message.answer(message_text)
                    else:
                        # –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
                        keyboard = InlineKeyboardBuilder()
                        delete_button = types.InlineKeyboardButton(
                            text="üö´–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{item[4]}"
                        )
                        keyboard.add(delete_button)
                        await message.answer(
                            message_text, reply_markup=keyboard.as_markup()
                        )
            elif text == "üî®–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ª–∏—Å—Ç —Ä–∞–±–æ—Ç –Ω–∞ –¥–µ–Ω—å":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ª–∏—Å—Ç —Ä–∞–±–æ—Ç –Ω–∞ –¥–µ–Ω—å", –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await message.answer(
                    "‚ö†Ô∏è–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ –∑–∞ –¥–µ–Ω—å, "
                    "–∏–º–µ–Ω–Ω–æ —ç—Ç–∏ –∑–∞–ø–∏—Å–∏ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. "
                    "–ú–æ–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑ –∑–∞ –¥–µ–Ω—å.‚ö†Ô∏è"
                )
                # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É
                await message.answer(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
                    reply_markup=await generate_current_week_works_dates(),
                )
                # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await state.set_state(WorkList.choice_date)

            elif text == "üìù–ú–æ–∏ –ª–∏—Å—Ç—ã —Ä–∞–±–æ—Ç –∑–∞ –¥–µ–Ω—å":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É "–ú–æ–∏ –ª–∏—Å—Ç—ã —Ä–∞–±–æ—Ç –∑–∞ –¥–µ–Ω—å", –ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ª–∏—Å—Ç—ã —Ä–∞–±–æ—Ç
                works_lists = (await get_works_lists(user_id_site)).get("data")
                if len(works_lists) > 0:
                    # —Ä–∞–±–æ—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—ã –ª–∏—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç
                    await message.answer(
                        "–í–∞—à–∏ —Å–¥–µ–ª—å–Ω—ã–µ –ª–∏—Å—Ç—ã:",
                        reply_markup=await create_works_list(works_lists),
                    )
                    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å
                    await state.set_state(ViewWorkList.view_work)
                else:
                    # —Ä–∞–±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await message.answer(
                        "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                        reply_markup=menu_keyboard(message.from_user.id),
                    )
            # –í–†–ï–ú–ï–ù–ù–û –£–î–ê–õ–ï–ù–û
            elif (
                text == "üõ†Ô∏è–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—ã –ø–æ –ø–æ—Å—Ç–∞–≤–∫–µ"
                and message.from_user.id in ADMINS
            ):
                deliveries = await get_deliveries_in_progress()
                if deliveries:
                    marketplaces = dict()
                    for dlv in deliveries:
                        mp_name = dlv.get("marketplace_name")
                        if mp_name in marketplaces:
                            marketplaces[mp_name].update(
                                {dlv.get("id"): dlv.get("name")}
                            )
                        else:
                            marketplaces[mp_name] = {dlv.get("id"): dlv.get("name")}
                    mp_string = json.dumps(marketplaces)
                    await state.set_data({"marketplaces": mp_string})
                    await state.set_state(WorkListDelivery.choice_marketplace)
                    await message.answer(
                        "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:Ô∏è",
                        reply_markup=await marketplaces_keyboard(
                            [key for key in marketplaces.keys()]
                        ),
                    )
                else:
                    await message.answer("–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            elif (
                text == "üì¶–ú–æ–∏ –ø–æ—Å—Ç–∞–≤–∫–∏"
                and message.from_user.id in ADMINS
            ):
                data = await get_user_delivery_works(user.site_user_id)
                if data is not None:
                    marketplaces = data.get("data")
                    if not marketplaces:
                        await message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ—Å—Ç–∞–≤–∫–∞–º.")
                    else:
                        await message.answer("üì¶–í–∞—à–∏ —Ä–∞–±–æ—Ç—ã –ø–æ –ø–æ—Å—Ç–∞–≤–∫–∞–ºüì¶\n –§–æ—Ä–º–∞—Ç:\n<code>–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞:\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–∫–∏:\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è:\n–¢–∏–ø —Ä–∞–±–æ—Ç—ã:\n–ü–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ –ø–æ—Å—Ç–∞–≤–∫–µ, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Ä–∞–±–æ—Ç—É.</code>")
                        for key, val in marketplaces.items():
                            msg = make_delivery_view_message(key, val)
                            await message.answer(msg)
                        await state.set_data({"marketplaces": marketplaces})
                        await state.set_state(WorkDeliveryView.choice_marketplace)
                        await message.answer(
                            "Ô∏è‚ö†Ô∏èÔ∏è‚ö†Ô∏èÔ∏è‚ö†Ô∏è\n–ú–µ–Ω—é –¥–ª—è <b>–£–î–ê–õ–ï–ù–ò–Ø</b> —Ä–∞–±–æ—Ç –ø–æ –ø–æ—Å—Ç–∞–≤–∫–∞–º\nÔ∏è‚ö†Ô∏èÔ∏è‚ö†Ô∏èÔ∏è‚ö†Ô∏è\n–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å:Ô∏è",
                            reply_markup=await marketplaces_keyboard(
                                [key for key in marketplaces.keys()]
                            ),
                        )
                else:
                    await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Ç —Å–≤—è–∑–∏ —Å —Å–∞–π—Ç–æ–º - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")
            elif text == "üòµ‚Äçüí´–ù–æ—Ä–º–∞—Ç–∏–≤—ã":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É "–ù–æ—Ä–º–∞—Ç–∏–≤—ã", –¥–æ—Å—Ç–∞—ë–º –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –∏–∑ –±–¥
                async with async_session() as session:
                    async with session.begin():
                        standards_q = await session.execute(
                            select(Works).order_by(Works.department_name, Works.name)
                        )
                        standards = list(standards_q.scalars())

                mes = ""
                if standards:
                    # –Ω–æ—Ä–º–∞—Ç–∏–≤—ã –Ω–∞–π–¥–µ–Ω—ã, –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –æ—Ç–¥–µ–ª–∞–º
                    departments = {
                        k: list(g)
                        for k, g in groupby(standards, lambda w: w.department_name)
                    }
                    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    for dep, works in departments.items():
                        mes += f"{dep}:\n"
                        for work in works:
                            mes += f"\t- {work.name}: {work.standard}/—á–∞—Å\n"
                        mes += f"\n"
                # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await message.answer(mes or "–ù–æ—Ä–º–∞—Ç–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            elif text == "üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
                mess = ""
                # –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await message.answer(
                    "–°–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 7 –¥–Ω–µ–π\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑ –≤ —á–∞—Å –∏ –±–µ–∑ —É—á–µ—Ç–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è"
                )
                # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —Å–∞–π—Ç–∞
                response = await get_statistic(user_id_site)
                if response:
                    # –æ—Ç–≤–µ—Ç —Å —Å–∞–π—Ç–∞ –ø–æ–ª—É—á–µ–Ω
                    data = response.get("data", None)
                    try:
                        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        mess = (
                            f"–î–æ–ª–∂–Ω–æ—Å—Ç—å: {data['profile'][0]}\n"
                            f"–°—Ä–µ–¥–Ω—è—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: "
                            f"{data['profile'][1] if data['profile'][1] else '–ù–µ—Ç —Ä–∞–±–æ—Ç –∑–∞ 7 –¥–Ω–µ–π'}"
                            f"{'%' if data['profile'][1] else ''}\n"
                            f"{'–†–∞–±–æ—Ç—ã:\n' if data.get("work_summary") else ''}"
                        )
                        for key, value in data["work_summary"].items():
                            mess += f"    {key}: {value}\n"
                    except (KeyError, AttributeError, IndexError):
                        # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π –±–∏—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å —Å–∞–π—Ç–∞
                        mess = ""
                # –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.answer(
                    mess
                    or "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ "
                    "–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞."
                )
            elif text == "üêß–ó–∞—è–≤–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–ó–∞—è–≤–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await message.answer(
                    "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–∂–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –≤ –≥—Ä–∞—Ñ–∏–∫–µ, "
                    "–ª–∏—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏–ª–∏ –∂–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –º–æ–∂–µ—Ç–µ "
                    "–≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∑–∞—è–≤–∫–æ–π"
                )
                # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞—è–≤–∫–∞—Ö —Å —Å–∞–π—Ç–∞
                data = (await get_request(user_id_site)).get("data", None)
                if data:
                    # –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å, –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await message.answer("–í—Å–µ –∑–∞—è–≤–∫–∏:")
                    for key, value in data.items():
                        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        result = "–°–¥–µ–ª–∞–Ω–æ" if value.get("result") else "–û—Ç–∫–∞–∑"
                        comment_admin = (
                            value.get("comment_admin")
                            if value.get("comment_admin")
                            else "–ù–µ—Ç"
                        )
                        if value.get("result") is None:
                            result = "–û–∂–∏–¥–∞–Ω–∏–µ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏—è"
                        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ –æ –∑–∞—è–≤–∫–µ
                        await message.answer(
                            f"{key}"
                            f'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {value.get("comment")}'
                            f"\n–†–µ—à–µ–Ω–∏–µ: {result}"
                            f"\n–û—Ç–≤–µ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è: {comment_admin}\n"
                        )
                # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞—è–≤–∫–∏
                await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏", reply_markup=type_request)
                # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await state.set_state(Requests.type)

            elif text == "üí∞–†–∞—Å—á–µ—Ç–Ω—ã–µ –ª–∏—Å—Ç—ã":
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–†–∞—Å—á–µ—Ç–Ω—ã–µ –ª–∏—Å—Ç—ã', –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞
                api_data = (await get_pay_sheet(user_id_site)).get("data")
                if not api_data:
                    # –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await message.answer("–†–∞—Å—á—ë—Ç–Ω—ã–µ –ª–∏—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                else:
                    # –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await state.update_data({"api_data": api_data})
                    await message.answer(
                        "5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤:",
                        reply_markup=await generate_pay_sheets(api_data),
                    )

                    await state.set_state(PaySheets.choice_list)

            # elif text == "–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç":
            #     await generate_works_base()
            #     await message.answer("–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω")

            elif text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤" and message.from_user.id in ADMINS:
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤', –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º
                results = await get_message_counts_by_group()
                # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                mess = f"–¢–æ–ø 10 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å {results[1]} –ø–æ {results[2]}:\n"
                for result in results[0]:
                    mess += f" - {result[0]}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {result[-1]}\n"
                # –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.answer(mess)
            elif text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ" and message.from_user.id in ADMINS:
                # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ', –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–¥
                users_count = await aget_users_count()
                # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                mess = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {users_count}"
                # –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.answer(mess)
            else:
                # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
                await message.answer(
                    "–ó–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ –º–µ–Ω—é"
                )
                # await bot_start(message, state)
            # —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
            await anotify_admins(
                message.bot, f"{user.username} - {message.text}", ADMINS
            )

        else:
            # –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            await message.answer("–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–¥
        async with async_session() as session:
            async with session.begin():
                message = Message(user_id=message.from_user.id, text=text)
                session.add(message)
                await session.commit()
    except Exception as e:
        # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        logger.exception(e)
        # –æ—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.clear()
        # –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω—ã –æ–ø–æ–≤–µ—â–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        # —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
        await anotify_admins(
            message.bot,
            f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é; –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "
            f"{message.from_user.id}; —Ç–µ–∫—Å—Ç: {message.text}, –ø—Ä–∏—á–∏–Ω–∞: {e}",
            admins_list=ADMINS,
        )
